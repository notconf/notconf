name: build-notconf

on: [push, pull_request]

env:
  IMAGE_PATH: ghcr.io/notconf/
  CONTAINER_RUNTIME: podman

permissions:
  contents: read
  # explicit write permissions for allowing writes to organization packages
  packages: write

jobs:
  build-notconf-base:
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    runs-on: ${{ matrix.arch == 'x86_64' && 'ubuntu-latest' || 'self-hosted' }}

    steps:
    - name: Set up environment
      run: echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV

    - name: Show podman info
      run: |
        podman info --format '{{ .Host.LogDriver }}'
        podman create --help | grep log-driver
        podman info

    - uses: actions/checkout@v4

    - name: Cache deps
      uses: actions/cache@v4
      with:
        path: src
        key: src-${{ hashFiles('Makefile') }}

    - name: Update deps
      run: make clone-deps

    - name: Build container images
      run: make build

    - name: Run tests
      run: |
        make test
        make test-podman-to-docker

    - name: Save logs for running containers
      if: always()
      # After a successful test run there should be no containers left in the
      # GitHub runner (a runner is an isolated VM). Any leftover containers are
      # a result of a test failing so we should get the logs!
      run: CNT_PREFIX= make save-logs

    - name: Log in to the container registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push pipeline container images
      run: |
        make push

    - name: Tag and push release container images
      if: ${{ github.ref_name == 'main' }}
      run: |
        make tag-release
        make push-release

    - name: Store container logs in artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: container-logs-notconf-${{ matrix.arch }}
        path: container-logs/

  build-yangmodels:
    strategy:
      matrix:
        path: [yang/vendor/nokia/7x50_YangModels/latest_sros_21.10,
              yang/vendor/nokia/7x50_YangModels/latest_sros_22.2,
              yang/vendor/juniper/21.1/21.1R1/junos,
              yang/vendor/cisco/xr/762,
              yang/vendor/cisco/xr/771]
        arch: [x86_64, aarch64]
    runs-on: ${{ matrix.arch == 'x86_64' && 'ubuntu-latest' || 'self-hosted' }}
    needs: build-notconf-base

    steps:
    - name: Set up environment
      run: echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV

    - name: Show podman info
      run: |
        podman info --format '{{ .Host.LogDriver }}'
        podman create --help | grep log-driver
        podman info

    - uses: actions/checkout@v4

    - name: Install test prerequisites
      run: |
        which pyang || pip3 install pyang
        sudo apt-get install -qy xmlstarlet

    - name: Cache yangmodels
      uses: actions/cache@v4
      with:
        path: yang
        key: yang-${{ hashFiles('Makefile') }}

    - name: Update yangmodels
      run: make clone-yangmodels

    - name: Run tests
      run: |
        make test-compose-yang YANG_PATH=${{ matrix.path }}

    - name: Save logs for running containers
      if: always()
      # After a successful test run there should be no containers left in the
      # GitHub runner (a runner is an isolated VM). Any leftover containers are
      # a result of a test failing so we should get the logs!
      run: CNT_PREFIX= make save-logs

    - name: Log in to the container registry
      uses: redhat-actions/podman-login@v1
      if: ${{ github.ref_name == 'main' }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag and push container images
      if: ${{ github.ref_name == 'main' }}
      run: |
        make tag-release-composed-notconf
        make push-release-composed-notconf

    - name: Compute artifact name and store in output
      id: artifact-name
      run: |
        YANG_PATH=${{ matrix.path }} make print-COMPOSE_IMAGE_NAME print-COMPOSE_IMAGE_TAG >> $GITHUB_OUTPUT

    - name: Store container logs in artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: container-logs-${{ steps.artifact-name.outputs.COMPOSE_IMAGE_NAME }}-${{ steps.artifact-name.outputs.COMPOSE_IMAGE_TAG }}
        path: container-logs/

  create-manifest:
    needs:
    - build-notconf-base
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Log in to the container registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push release manifests
        if: ${{ github.ref_name == 'main' }}
        run: |
          make create-release-manifest
          make push-release-manifest